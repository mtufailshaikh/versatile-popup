{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/cookies.js","webpack:///./src/main.js","webpack:///./src/versatile-popup.js","webpack:///./node_modules/domtastic/src/util.js","webpack:///./node_modules/domtastic/src/selector/index.js","webpack:///./node_modules/domtastic/src/array.js","webpack:///./node_modules/domtastic/src/baseClass.js","webpack:///./node_modules/domtastic/src/css.js","webpack:///./node_modules/domtastic/src/dom/index.js","webpack:///./node_modules/domtastic/src/dom/attr.js","webpack:///./node_modules/domtastic/src/dom/class.js","webpack:///./node_modules/domtastic/src/dom/contains.js","webpack:///./node_modules/domtastic/src/dom/data.js","webpack:///./node_modules/domtastic/src/dom/extra.js","webpack:///./node_modules/domtastic/src/dom/html.js","webpack:///./node_modules/domtastic/src/selector/closest.js","webpack:///./node_modules/domtastic/src/event/index.js","webpack:///./node_modules/domtastic/src/event/trigger.js","webpack:///./node_modules/domtastic/src/event/ready.js","webpack:///./node_modules/domtastic/src/noconflict.js","webpack:///./node_modules/domtastic/src/selector/extra.js","webpack:///./node_modules/domtastic/src/type.js","webpack:///./node_modules/domtastic/src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Cookies","options","arguments","length","undefined","str","this","encode","maxage","date","Date","setTime","getTime","expires","toUTCString","path","domain","secure","document","cookie","cookies","parse","write","read","obj","pairs","split","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","next","done","pair","decode","err","return","encodeURIComponent","e","decodeURIComponent","ttPlugin","window","versatileCard","TTversatilePopup","_classCallCheck","header","body","footer","showOnLoad","startDate","endDate","globalName","customVisible","$widget","htmlString","elem","createElement","innerHTML","trim","firstChild","_this","_widget","createElementFromString","_domtastic2","default","checkexpireDate","append","console","error","find","on","hide","show","start_date","end_date","today","conversionCard","openBtn","toggleClass","_header","_body","_footer","showClass","showArrow","bgImage","backgroundImage","win","toArray","collection","result","Array","each","callback","thisArg","nodeType","extend","target","sources","forEach","src","prop","uniq","filter","item","index","indexOf","isPrototypeSet","reFragment","reSingleTag","reSimpleSelector","$","selector","context","DOMtastic","test","createFragment","querySelector","querySelectorAll","wrap","nodes","node","child","push","matches","Element","_matches","matchesSelector","mozMatchesSelector","msMatchesSelector","oMatchesSelector","webkitMatchesSelector","element","getElementById","slice","getElementsByClassName","getElementsByTagName","html","RegExp","$1","elements","container","children","childNodes","fn","constructor","ArrayProto","every","array_each","map","pop","reduce","reduceRight","reverse","shift","some","unshift","baseClass","api","BaseClass","[object Object]","camelize","replace","letter","toUpperCase","dasherize","toLowerCase","css","styleProps","val","isNaN","parseFloat","isFinite","isNumeric","style","removeProperty","dom_forEach","Node","insertAdjacentHTML","appendChild","NodeList","_each","prepend","insertBefore","before","parentNode","after","nextSibling","clone","_clone","cloneNode","el","elm","attr","getAttribute","setAttribute","removeAttr","removeAttribute","addClass","class_each","removeClass","state","action","hasClass","classList","contains","fnName","className","compareDocumentPosition","DOCUMENT_POSITION_DISCONNECTED","isSupportsDataSet","documentElement","DATAKEYPROP","data_camelize","match","char","data_data","data_prop","appendTo","empty","remove","removeChild","replaceWith","apply","extra_text","textContent","extra_val","fragment","closest_closest","closest","parentElement","eventNames","handler","useCapture","once","parts","namespace","eventListener","eventName","proxyHandler","delegateHandler","listener","event","off","addEventListener","getHandlers","handlers","removeEventListener","splice","clearHandlers","one","eventKeyProp","id","event_handlers","unusedKeys","augmentEvent","eventMethods","preventDefault","stopImmediatePropagation","stopPropagation","returnTrue","returnFalse","isDefaultPrevented","methodName","testMethodName","originalMethod","_preventDefault","eventTarget","_target","currentTarget","isPropagationStopped","unbind","reMouseEvent","reKeyEvent","trigger","type","data","bubbles","cancelable","getEventConstructor","detail","isEventBubblingInDetachedTree","isAttachedToDocument","dispatchEvent","triggerForPath","isSupportsOtherEventConstructors","MouseEvent","KeyboardEvent","CustomEvent","triggerHandler","ownerDocument","params","directEventMethods","customEvent","createEvent","initCustomEvent","isBubbling","doc","parent","ready","readyState","previousLib","noConflict","concat","contents","eq","first","extra_parent","siblings","sibling","start","end","isFunction","isArray","src_api","src_$","selector_namespaceObject","contains_namespaceObject","noconflict_namespaceObject","type_namespaceObject","array_namespaceObject","css_namespaceObject","attr_namespaceObject","dom_namespaceObject","class_namespaceObject","data_namespaceObject","extra_namespaceObject","html_namespaceObject","event_namespaceObject","trigger_namespaceObject","ready_namespaceObject","closest_namespaceObject","selector_extra_namespaceObject","version","__webpack_exports__"],"mappings":"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","file":"tt-plugin.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"./dist/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","export default class Cookies {\n\n  static get YearMaxAge() {\n      let MaxAge =  365 * 24 * 60 * 60 * 1000; //1 year;\n      return MaxAge;\n  }\n\n  static write(name, value, options = {}) {\n    var str = `${this.encode(name)}=${this.encode(value)}`\n\n    if (value == null) {options.maxage = -1}\n\n    if (options.maxage) {\n      let date = new Date();\n      date.setTime(date.getTime()+(options.maxage));\n      options.expires = date.toUTCString();\n      //options.expires = new Date((new Date()).getTime() + options.maxage)\n    }\n\n    if (options.path) {str += '; path=' + options.path}\n    if (options.domain) {str += '; domain=' + options.domain}\n    if (options.expires) {str += '; expires=' + options.expires;}\n    if (options.secure) {str += '; secure'}\n\n    document.cookie = str\n  }\n\n  static read(name) {\n    var cookies = this.parse(document.cookie);\n    if(name) {\n      return cookies[name] || null;\n    } else {\n      return cookies;\n    }\n  }\n\n  static delete(name) {\n    if(name) {\n      this.write(name, null);\n    } else {\n      let cookies = this.read();\n      for(let key in cookies) {\n        if(cookies.hasOwnProperty(key)){\n          this.write(key, null)\n        }\n      }\n\n    }\n  }\n\n static parse(str) {\n    var obj = {},\n      pairs = str.split(/ *; */)\n\n    if (!pairs[0]) {return obj}\n\n    for (let pair of pairs) {\n      pair = pair.split('=')\n      obj[this.decode(pair[0])] = this.decode(pair[1])\n    }\n    return obj\n  }\n\n\n  static encode(value){\n    try {\n      return encodeURIComponent(value);\n    } catch (e) {\n      return null\n    }\n  }\n\n  static decode(value) {\n    try {\n      return decodeURIComponent(value);\n    } catch (e) {\n      return null\n    }\n  }\n\n}\n","import TTversatilePopup from './versatile-popup';\nimport Cookies from './cookies';\n\n\nlet ttPlugin = window.ttPlugin || {};\n\nttPlugin.versatileCard =  TTversatilePopup;\nttPlugin.Cookies =  Cookies;\n\nwindow.ttPlugin = ttPlugin;\n","'use strict';\nimport localQuery from 'domtastic';\nimport Cookies from './cookies';\n\nexport default class TTversatilePopup {\n\n  constructor(options = {}) {\n    this.header = options.header || '';\n    this.body = options.body || '';\n    this.footer = options.footer || '';\n    this.showOnLoad = !!options.showOnLoad; //default to show the popup not arrow\n    this.startDate = options.startDate || null; // starting date to show the widget\n    this.endDate = options.endDate || null; // end date of the widget to hide after passing this date\n    this.globalName =  options.globalName || false; // popup unique name to target all popup individually if more than one popup\n    this.customVisible = !!options.customVisible; // show hide popup on other pages based on current status\n    this.$widget = \"\";\n  //  this.init();\n  }\n\n  get header() {\n    return this._header;\n  }\n  set header(value) {\n    this._header = value;\n  }\n  get body() {\n    return this._body;\n  }\n  set body(value) {\n    this._body = value;\n  }\n  get footer() {\n    return this._footer;\n  }\n  set footer(value) {\n    this._footer = value;\n  }\n\n  get htmlString() {\n    let showClass = '';\n    let showArrow = '';\n    let bgImage = \"\";\n    if (this.showOnLoad) {\n      if (Cookies.read('tt-' + this.globalName)) {\n        if (Cookies.read('tt-' + this.globalName) == 'show') {\n          showClass = ' ttw-versatile__card--show';\n          showArrow = '';\n        } else {\n          showClass = '';\n          showArrow = ' ttw-versatile__open--show';\n        }\n      } else {\n        if (this.customVisible) {\n          Cookies.write('tt-' + this.globalName, 'show', {'path':'/'});\n          showClass = ' ttw-versatile__card--show';\n        } else {\n          showClass = ' ttw-versatile__card--show';\n        }\n      }\n    } else {\n      if (Cookies.read('tt-' + this.globalName) == 'show') {\n        showArrow = '';\n        showClass = ' ttw-versatile__card--show';\n      }else{\n        showArrow = ' ttw-versatile__open--show';\n        showClass = '';\n      }\n    }\n    if (this.backgroundImage) {\n      bgImage = ` style=\"background-image:url('${this.backgroundImage}')\"`;\n    }\n    return `<div class=\"ttw-versatile ${this.globalName}\">\n              <div class=\"ttw-versatile__card${showClass}\">\n            \t\t<span class=\"ttw-versatile__close\">&times;</span>\n            \t\t<div class=\"ttw-versatile__title\">\n            \t\t\t${this.header}\n            \t\t</div>\n              \t<div class=\"ttw-versatile__body\"${bgImage}>\n              \t  ${this.body}\n              \t</div>\n                <div class=\"ttw-versatile__footer\">\n                  ${this.footer}\n                </div>\n              </div>\n            \t<span class=\"ttw-versatile__open${showArrow}\"><i>&rarr;</i></span>\n            </div>`;\n  }\n\n  createElementFromString(htmlString) {\n    let elem = document.createElement('div');\n    elem.innerHTML = htmlString.trim();\n    return elem.firstChild;\n  }\n\n  init() {\n    this._widget = this.createElementFromString(this.htmlString);\n    this.$widget = localQuery(this._widget);\n    if (typeof this.globalName == 'string') {\n      if (this.startDate != null && this.endDate != null) {\n        if (this.checkexpireDate(this.startDate, this.endDate)) {\n          localQuery('body').append(this.$widget);\n        }\n      } else {\n        localQuery('body').append(this.$widget);\n      }\n    } else {\n      console.error('Please set the \"globalName\" for TT Versatile Popup.');\n    }\n    localQuery(localQuery(this.$widget).find('.ttw-versatile__close')).on('click', () => {\n      this.hide();\n    });\n    localQuery(localQuery(this.$widget).find('.ttw-versatile__open')).on('click', () => {\n      this.show();\n    });\n  }\n\n  checkexpireDate(startDate = null, endDate = null) {\n    if (startDate != null && endDate != null) {\n      let start_date = new Date(startDate);\n      let end_date = new Date(endDate);\n      let today = new Date();\n      if (today >= start_date && today <= end_date) {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  show() {\n    let conversionCard = this.$widget.find('.ttw-versatile__card');\n    let openBtn        = this.$widget.find('.ttw-versatile__open');\n\n    conversionCard.toggleClass('ttw-versatile__card--show');\n    openBtn.toggleClass('ttw-versatile__open--show');\n    if (this.customVisible) {\n      Cookies.write('tt-' + this.globalName, 'show', {'path':'/'});\n    }\n  }\n\n  hide() {\n    let conversionCard = this.$widget.find('.ttw-versatile__card');\n    let openBtn        = this.$widget.find('.ttw-versatile__open');\n\n    conversionCard.toggleClass('ttw-versatile__card--show');\n    openBtn.toggleClass('ttw-versatile__open--show');\n    if (this.customVisible) {\n      Cookies.write('tt-' + this.globalName, 'hide', {'path':'/'});\n    }\n  }\n\n}\n","/*\n * @module Util\n */\n\n/*\n * Reference to the window object\n * @private\n */\n\nexport const win = typeof window !== 'undefined' ? window : {};\n\n/**\n * Convert `NodeList` to `Array`.\n *\n * @param {NodeList|Array} collection\n * @return {Array}\n * @private\n */\n\nexport const toArray = collection => {\n  const length = collection.length;\n  const result = new Array(length);\n  for(let i = 0; i < length; i++) {\n    result[i] = collection[i];\n  }\n  return result;\n};\n\n/**\n * Faster alternative to [].forEach method\n *\n * @param {Node|NodeList|Array} collection\n * @param {Function} callback\n * @return {Node|NodeList|Array}\n * @private\n */\n\nexport const each = (collection, callback, thisArg) => {\n  const length = collection.length;\n  if(length !== undefined && collection.nodeType === undefined) {\n    for(let i = 0; i < length; i++) {\n      callback.call(thisArg, collection[i], i, collection);\n    }\n  } else {\n    callback.call(thisArg, collection, 0, collection);\n  }\n  return collection;\n};\n\n/**\n * Assign enumerable properties from source object(s) to target object\n *\n * @method extend\n * @param {Object} target Object to extend\n * @param {Object} [source] Object to extend from\n * @return {Object} Extended object\n * @example\n *     $.extend({a: 1}, {b: 2}); // {a: 1, b: 2}\n * @example\n *     $.extend({a: 1}, {b: 2}, {a: 3}); // {a: 3, b: 2}\n */\n\nexport const extend = (target, ...sources) => {\n  sources.forEach(src => {\n    for(let prop in src) {\n      target[prop] = src[prop];\n    }\n  });\n  return target;\n};\n\n/**\n * Return the collection without duplicates\n *\n * @param collection Collection to remove duplicates from\n * @return {Node|NodeList|Array}\n * @private\n */\n\nexport const uniq = collection => collection.filter((item, index) => collection.indexOf(item) === index);\n","/**\n * @module Selector\n */\n\nimport { win, each } from '../util';\n\nlet isPrototypeSet = false;\n\nconst reFragment = /^\\s*<(\\w+|!)[^>]*>/;\nconst reSingleTag = /^<(\\w+)\\s*\\/?>(?:<\\/\\1>|)$/;\nconst reSimpleSelector = /^[.#]?[\\w-]*$/;\n\n/*\n * Versatile wrapper for `querySelectorAll`.\n *\n * @param {String|Node|NodeList|Array} selector Query selector, `Node`, `NodeList`, array of elements, or HTML fragment string.\n * @param {String|Node|NodeList} context=document The context for the selector to query elements.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     var $items = $(.items');\n * @example\n *     var $element = $(domElement);\n * @example\n *     var $list = $(nodeList, document.body);\n * @example\n *     var $element = $('<p>evergreen</p>');\n */\n\nconst domtastic = function domtastic(selector, context = document) {\n\n  let collection;\n\n  if(!selector) {\n\n    collection = document.querySelectorAll(null);\n\n  } else if(selector instanceof DOMtastic) {\n\n    return selector;\n\n  } else if(typeof selector !== 'string') {\n\n    collection = selector.nodeType || selector === window ? [selector] : selector;\n\n  } else if(reFragment.test(selector)) {\n\n    collection = createFragment(selector);\n\n  } else {\n\n    context = typeof context === 'string' ? document.querySelector(context) : context.length ? context[0] : context;\n\n    collection = querySelector(selector, context);\n\n  }\n\n  return wrap(collection);\n\n};\n\nexport const $ = domtastic;\n\n/*\n * Find descendants matching the provided `selector` for each element in the collection.\n *\n * @param {String|Node|NodeList|Array} selector Query selector, `Node`, `NodeList`, array of elements, or HTML fragment string.\n * @return {Object} The wrapped collection\n * @example\n *     $('.selector').find('.deep').$('.deepest');\n */\n\nexport const find = function(selector) {\n  const nodes = [];\n  each(this, node => each(querySelector(selector, node), child => {\n    if(nodes.indexOf(child) === -1) {\n      nodes.push(child);\n    }\n  }));\n  return $(nodes);\n};\n\n/*\n * Returns `true` if the element would be selected by the specified selector string; otherwise, returns `false`.\n *\n * @param {Node} element Element to test\n * @param {String} selector Selector to match against element\n * @return {Boolean}\n *\n * @example\n *     $.matches(element, '.match');\n */\n\nexport const matches = (() => {\n  const context = typeof Element !== 'undefined' ? Element.prototype : win;\n  const _matches = context.matches || context.matchesSelector || context.mozMatchesSelector || context.msMatchesSelector || context.oMatchesSelector || context.webkitMatchesSelector;\n  return (element, selector) => _matches.call(element, selector);\n})();\n\n/*\n * Use the faster `getElementById`, `getElementsByClassName` or `getElementsByTagName` over `querySelectorAll` if possible.\n *\n * @private\n * @param {String} selector Query selector.\n * @param {Node} context The context for the selector to query elements.\n * @return {Object} NodeList, HTMLCollection, or Array of matching elements (depending on method used).\n */\n\nconst querySelector = (selector, context) => {\n\n  const isSimpleSelector = reSimpleSelector.test(selector);\n\n  if(isSimpleSelector) {\n    if(selector[0] === '#') {\n      const element = (context.getElementById ? context : document).getElementById(selector.slice(1));\n      return element ? [element] : [];\n    }\n    if(selector[0] === '.') {\n      return context.getElementsByClassName(selector.slice(1));\n    }\n    return context.getElementsByTagName(selector);\n  }\n\n  return context.querySelectorAll(selector);\n\n};\n\n/*\n * Create DOM fragment from an HTML string\n *\n * @private\n * @param {String} html String representing HTML.\n * @return {NodeList}\n */\n\nconst createFragment = html => {\n\n  if(reSingleTag.test(html)) {\n    return [document.createElement(RegExp.$1)];\n  }\n\n  const elements = [];\n  const container = document.createElement('div');\n  const children = container.childNodes;\n\n  container.innerHTML = html;\n\n  for(let i = 0, l = children.length; i < l; i++) {\n    elements.push(children[i]);\n  }\n\n  return elements;\n};\n\n/*\n * Calling `$(selector)` returns a wrapped collection of elements.\n *\n * @private\n * @param {NodeList|Array} collection Element(s) to wrap.\n * @return Object) The wrapped collection\n */\n\nconst wrap = collection => {\n\n  if(!isPrototypeSet) {\n    DOMtastic.prototype = $.fn;\n    DOMtastic.prototype.constructor = DOMtastic;\n    isPrototypeSet = true;\n  }\n\n  return new DOMtastic(collection);\n};\n\n/*\n * Constructor for the Object.prototype strategy\n *\n * @constructor\n * @private\n * @param {NodeList|Array} collection Element(s) to wrap.\n */\n\nexport const DOMtastic = function DOMtastic(collection) {\n  let i = 0;\n  const length = collection.length;\n  for(; i < length;) {\n    this[i] = collection[i++];\n  }\n  this.length = length;\n};\n","/**\n * @module Array\n */\n\nimport { each as _each, toArray } from './util';\nimport { $, matches } from './selector/index';\n\nconst ArrayProto = Array.prototype;\n\n/**\n * Checks if the given callback returns a true(-ish) value for each element in the collection.\n *\n * @param {Function} callback Function to execute for each element, invoked with `element` as argument.\n * @param {Object} [thisArg] Value to use as `this` when executing `callback`.\n * @return {Boolean} Whether each element passed the callback check.\n * @example\n *     // Test whether every element in the collection has the \"active\" attribute\n *     $('.items').every(function(element) {\n *         return element.hasAttribute('active')\n *     });\n */\n\nexport const every = ArrayProto.every;\n\n/**\n * Filter the collection by selector or function, and return a new collection with the result.\n *\n * @param {String|Function} selector Selector or function to filter the collection.\n * @param {Object} [thisArg] Value to use as `this` when executing `callback`.\n * @return {Object} A new wrapped collection\n * @chainable\n * @example\n *     $('.items').filter('.active');\n * @example\n *     $('.items').filter(function(element) {\n *         return element.hasAttribute('active')\n *     });\n */\n\nexport const filter = function(selector, thisArg) {\n  const callback = typeof selector === 'function' ? selector : element => matches(element, selector);\n  return $(ArrayProto.filter.call(this, callback, thisArg));\n};\n\n/**\n * Execute a function for each element in the collection.\n *\n * @param {Function} callback Function to execute for each element, invoked with `element` as argument.\n * @param {Object} [thisArg] Value to use as `this` when executing `callback`.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.items').forEach(function(element) {\n *         element.style.color = 'evergreen';\n *     );\n */\n\nexport const forEach = function(callback, thisArg) {\n  return _each(this, callback, thisArg);\n};\n\nexport const each = forEach;\n\n/**\n * Returns the index of an element in the collection.\n *\n * @param {Node} element\n * @return {Number} The zero-based index, -1 if not found.\n * @example\n *     $('.items').indexOf(element); // 2\n */\n\nexport const indexOf = ArrayProto.indexOf;\n\n/**\n * Create a new collection by executing the callback for each element in the collection.\n *\n * @param {Function} callback Function to execute for each element, invoked with `element` as argument.\n * @param {Object} [thisArg] Value to use as `this` when executing `callback`.\n * @return {Array} Collection with the return value of the executed callback for each element.\n * @example\n *     // Create a new array with the attribute value of each element:\n *     $('.items').map(function(element) {\n *         return element.getAttribute('name')\n */\n\nexport const map = ArrayProto.map;\n\n/**\n * Removes the last element from the collection, and returns that element.\n *\n * @return {Object} The last element from the collection.\n * @example\n *     var lastElement = $('.items').pop();\n */\n\nexport const pop = ArrayProto.pop;\n\n/**\n * Adds one or more elements to the end of the collection, and returns the new length of the collection.\n *\n * @param {Object} element Element(s) to add to the collection\n * @return {Number} The new length of the collection\n * @example\n *     $('.items').push(element);\n */\n\nexport const push = ArrayProto.push;\n\n/**\n * Apply a function against each element in the collection, and this accumulator function has to reduce it\n * to a single value.\n *\n * @param {Function} callback Function to execute on each value in the array, taking four arguments (see example).\n * @param {Mixed} initialValue Object to use as the first argument to the first call of the callback.\n * @example\n *     // Calculate the combined height of elements:\n *     $('.items').reduce(function(previousValue, element, index, collection) {\n *         return previousValue + element.clientHeight;\n *     }, 0);\n */\n\nexport const reduce = ArrayProto.reduce;\n\n/**\n * Apply a function against each element in the collection (from right-to-left), and this accumulator function has\n * to reduce it to a single value.\n *\n * @param {Function} callback Function to execute on each value in the array, taking four arguments (see example).\n * @param {Mixed} initialValue Object to use as the first argument to the first call of the callback.\n * @example\n *     // Concatenate the text of elements in reversed order:\n *     $('.items').reduceRight(function(previousValue, element, index, collection) {\n *         return previousValue + element.textContent;\n *     }, '');\n */\n\nexport const reduceRight = ArrayProto.reduceRight;\n\n/**\n * Reverses an array in place. The first array element becomes the last and the last becomes the first.\n *\n * @return {Object} The wrapped collection, reversed\n * @chainable\n * @example\n *     $('.items').reverse();\n */\n\nexport const reverse = function() {\n  return $(toArray(this).reverse());\n};\n\n/**\n * Removes the first element from the collection, and returns that element.\n *\n * @return {Object} The first element from the collection.\n * @example\n *     var firstElement = $('.items').shift();\n */\n\nexport const shift = ArrayProto.shift;\n\n/**\n * Checks if the given callback returns a true(-ish) value for any of the elements in the collection.\n *\n * @param {Function} callback Function to execute for each element, invoked with `element` as argument.\n * @return {Boolean} Whether any element passed the callback check.\n * @example\n *     $('.items').some(function(element) {\n *         return element.hasAttribute('active')\n *     }); // true/false\n */\n\nexport const some = ArrayProto.some;\n\n/**\n * Adds one or more elements to the beginning of the collection, and returns the new length of the collection.\n *\n * @param {Object} element Element(s) to add to the collection\n * @return {Number} The new length of the collection\n * @example\n *     $('.items').unshift(element);\n */\n\nexport const unshift = ArrayProto.unshift;\n","/**\n * @module BaseClass\n */\n\nimport { $ as selector, DOMtastic } from './selector/index';\nimport { extend } from './util';\n\nexport default function(api) {\n\n  /**\n   * Provide subclass for classes or components to extend from.\n   * The opposite and successor of plugins (no need to extend `$.fn` anymore, complete control).\n   *\n   * @return {Class} The class to extend from, including all `$.fn` methods.\n   * @example\n   *     import { BaseClass } from  'domtastic';\n   *\n   *     class MyComponent extends BaseClass {\n   *         doSomething() {\n   *             return this.addClass('.foo');\n   *         }\n   *     }\n   *\n   *     let component = new MyComponent('body');\n   *     component.doSomething();\n   *\n   * @example\n   *     import $ from  'domtastic';\n   *\n   *     class MyComponent extends $.BaseClass {\n   *         progress(value) {\n   *             return this.attr('data-progress', value);\n   *         }\n   *     }\n   *\n   *     let component = new MyComponent(document.body);\n   *     component.progress('ive').append('<p>enhancement</p>');\n   */\n\n  class BaseClass {\n    constructor() {\n      DOMtastic.call(this, selector(...arguments));\n    }\n  }\n  extend(BaseClass.prototype, api);\n  return BaseClass;\n}\n","/**\n * @module CSS\n */\n\nimport { each } from './util';\n\nconst isNumeric = value => !isNaN(parseFloat(value)) && isFinite(value);\n\nconst camelize = value => value.replace(/-([\\da-z])/gi, (matches, letter) => letter.toUpperCase());\n\nconst dasherize = value => value.replace(/([a-z\\d])([A-Z])/g, '$1-$2').toLowerCase();\n\n/**\n * Get the value of a style property for the first element, or set one or more style properties for each element in the collection.\n *\n * @param {String|Object} key The name of the style property to get or set. Or an object containing key-value pairs to set as style properties.\n * @param {String} [value] The value of the style property to set.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').css('padding-left'); // get\n *     $('.item').css('color', '#f00'); // set\n *     $('.item').css({'border-width': '1px', display: 'inline-block'}); // set multiple\n */\n\nexport const css = function(key, value) {\n\n  let styleProps, prop, val;\n\n  if(typeof key === 'string') {\n    key = camelize(key);\n\n    if(typeof value === 'undefined') {\n      let element = this.nodeType ? this : this[0];\n      if(element) {\n        val = element.style[key];\n        return isNumeric(val) ? parseFloat(val) : val;\n      }\n      return undefined;\n    }\n\n    styleProps = {};\n    styleProps[key] = value;\n  } else {\n    styleProps = key;\n    for(prop in styleProps) {\n      val = styleProps[prop];\n      delete styleProps[prop];\n      styleProps[camelize(prop)] = val;\n    }\n  }\n\n  each(this, element => {\n    for(prop in styleProps) {\n      if(styleProps[prop] || styleProps[prop] === 0) {\n        element.style[prop] = styleProps[prop];\n      } else {\n        element.style.removeProperty(dasherize(prop));\n      }\n    }\n  });\n\n  return this;\n};\n","/**\n * @module DOM\n */\n\nimport { toArray } from '../util';\nimport { $ } from '../selector/index';\n\nconst forEach = Array.prototype.forEach;\n\n/**\n * Append element(s) to each element in the collection.\n *\n * @param {String|Node|NodeList|Object} element What to append to the element(s).\n * Clones elements as necessary.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').append('<p>more</p>');\n */\n\nexport const append = function(element) {\n  if(this instanceof Node) {\n    if(typeof element === 'string') {\n      this.insertAdjacentHTML('beforeend', element);\n    } else {\n      if(element instanceof Node) {\n        this.appendChild(element);\n      } else {\n        const elements = element instanceof NodeList ? toArray(element) : element;\n        forEach.call(elements, this.appendChild.bind(this));\n      }\n    }\n  } else {\n    _each(this, append, element);\n  }\n  return this;\n};\n\n/**\n * Place element(s) at the beginning of each element in the collection.\n *\n * @param {String|Node|NodeList|Object} element What to place at the beginning of the element(s).\n * Clones elements as necessary.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').prepend('<span>start</span>');\n */\n\nexport const prepend = function(element) {\n  if(this instanceof Node) {\n    if(typeof element === 'string') {\n      this.insertAdjacentHTML('afterbegin', element);\n    } else {\n      if(element instanceof Node) {\n        this.insertBefore(element, this.firstChild);\n      } else {\n        let elements = element instanceof NodeList ? toArray(element) : element;\n        forEach.call(elements.reverse(), prepend.bind(this));\n      }\n    }\n  } else {\n    _each(this, prepend, element);\n  }\n  return this;\n};\n\n/**\n * Place element(s) before each element in the collection.\n *\n * @param {String|Node|NodeList|Object} element What to place as sibling(s) before to the element(s).\n * Clones elements as necessary.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.items').before('<p>prefix</p>');\n */\n\nexport const before = function(element) {\n  if(this instanceof Node) {\n    if(typeof element === 'string') {\n      this.insertAdjacentHTML('beforebegin', element);\n    } else {\n      if(element instanceof Node) {\n        this.parentNode.insertBefore(element, this);\n      } else {\n        const elements = element instanceof NodeList ? toArray(element) : element;\n        forEach.call(elements, before.bind(this));\n      }\n    }\n  } else {\n    _each(this, before, element);\n  }\n  return this;\n};\n\n/**\n * Place element(s) after each element in the collection.\n *\n * @param {String|Node|NodeList|Object} element What to place as sibling(s) after to the element(s). Clones elements as necessary.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.items').after('<span>suf</span><span>fix</span>');\n */\n\nexport const after = function(element) {\n  if(this instanceof Node) {\n    if(typeof element === 'string') {\n      this.insertAdjacentHTML('afterend', element);\n    } else {\n      if(element instanceof Node) {\n        this.parentNode.insertBefore(element, this.nextSibling);\n      } else {\n        const elements = element instanceof NodeList ? toArray(element) : element;\n        forEach.call(elements.reverse(), after.bind(this));\n      }\n    }\n  } else {\n    _each(this, after, element);\n  }\n  return this;\n};\n\n/**\n * Clone a wrapped object.\n *\n * @return {Object} Wrapped collection of cloned nodes.\n * @example\n *     $(element).clone();\n */\n\nexport const clone = function() {\n  return $(_clone(this));\n};\n\n/**\n * Clone an object\n *\n * @param {String|Node|NodeList|Array} element The element(s) to clone.\n * @return {String|Node|NodeList|Array} The cloned element(s)\n * @private\n */\n\nexport const _clone = element => {\n  if(typeof element === 'string') {\n    return element;\n  } else if(element instanceof Node) {\n    return element.cloneNode(true);\n  } else if('length' in element) {\n    return [].map.call(element, el => el.cloneNode(true));\n  }\n  return element;\n};\n\n/**\n * Specialized iteration, applying `fn` in reversed manner to a clone of each element, but the provided one.\n *\n * @param {NodeList|Array} collection\n * @param {Function} fn\n * @param {Node} element\n * @private\n */\n\nexport const _each = (collection, fn, element) => {\n  let l = collection.length;\n  while(l--) {\n    const elm = l === 0 ? element : _clone(element);\n    fn.call(collection[l], elm);\n  }\n};\n","/**\n * @module Attr\n */\n\nimport { each } from '../util';\n\n/**\n * Get the value of an attribute for the first element, or set one or more attributes for each element in the collection.\n *\n * @param {String|Object} key The name of the attribute to get or set. Or an object containing key-value pairs to set as attributes.\n * @param {String} [value] The value of the attribute to set.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').attr('attrName'); // get\n *     $('.item').attr('attrName', 'attrValue'); // set\n *     $('.item').attr({attr1: 'value1', 'attr-2': 'value2'}); // set multiple\n */\n\nexport const attr = function(key, value) {\n\n  if(typeof key === 'string' && typeof value === 'undefined') {\n    const element = this.nodeType ? this : this[0];\n    return element ? element.getAttribute(key) : undefined;\n  }\n\n  return each(this, element => {\n    if(typeof key === 'object') {\n      for(let attr in key) {\n        element.setAttribute(attr, key[attr]);\n      }\n    } else {\n      element.setAttribute(key, value);\n    }\n  });\n};\n\n/**\n * Remove attribute from each element in the collection.\n *\n * @param {String} key Attribute name\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.items').removeAttr('attrName');\n */\n\nexport const removeAttr = function(key) {\n  return each(this, element => element.removeAttribute(key));\n};\n","/**\n * @module Class\n */\n\nimport { each } from '../util';\n\n/**\n * Add a class to the element(s)\n *\n * @param {String} value Space-separated class name(s) to add to the element(s).\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').addClass('bar');\n *     $('.item').addClass('bar foo');\n */\n\nexport const addClass = function(value) {\n  if(value && value.length) {\n    each(value.split(' '), _each.bind(this, 'add'));\n  }\n  return this;\n};\n\n/**\n * Remove a class from the element(s)\n *\n * @param {String} value Space-separated class name(s) to remove from the element(s).\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.items').removeClass('bar');\n *     $('.items').removeClass('bar foo');\n */\n\nexport const removeClass = function(value) {\n  if(value && value.length) {\n    each(value.split(' '), _each.bind(this, 'remove'));\n  }\n  return this;\n};\n\n/**\n * Toggle a class at the element(s)\n *\n * @param {String} value Space-separated class name(s) to toggle at the element(s).\n * @param {Boolean} [state] A Boolean value to determine whether the class should be added or removed.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').toggleClass('bar');\n *     $('.item').toggleClass('bar foo');\n *     $('.item').toggleClass('bar', true);\n */\n\nexport const toggleClass = function(value, state) {\n  if(value && value.length) {\n    const action = typeof state === 'boolean' ? state ? 'add' : 'remove' : 'toggle';\n    each(value.split(' '), _each.bind(this, action));\n  }\n  return this;\n};\n\n/**\n * Check if the element(s) have a class.\n *\n * @param {String} value Check if the DOM element contains the class name. When applied to multiple elements,\n * returns `true` if _any_ of them contains the class name.\n * @return {Boolean} Whether the element's class attribute contains the class name.\n * @example\n *     $('.item').hasClass('bar');\n */\n\nexport const hasClass = function(value) {\n  return (this.nodeType ? [this] : this).some(element => element.classList.contains(value));\n};\n\n/**\n * Specialized iteration, applying `fn` of the classList API to each element.\n *\n * @param {String} fnName\n * @param {String} className\n * @private\n */\n\nconst _each = function(fnName, className) {\n  return each(this, element => element.classList[fnName](className));\n};\n","/**\n * @module contains\n */\n\n/**\n * Test whether an element contains another element in the DOM.\n *\n * @param {Element} container The element that may contain the other element.\n * @param {Element} element The element that may be a descendant of the other element.\n * @return {Boolean} Whether the `container` element contains the `element`.\n * @example\n *     $.contains(parentElement, childElement); // true/false\n */\n\nexport const contains = (container, element) => {\n  if(!container || !element || container === element) {\n    return false;\n  } else if(container.contains) {\n    return container.contains(element);\n  } else if(container.compareDocumentPosition) {\n    return !(container.compareDocumentPosition(element) & Node.DOCUMENT_POSITION_DISCONNECTED);\n  }\n  return false;\n};\n","/**\n * @module Data\n */\n\nimport { each } from '../util';\n\nconst isSupportsDataSet = typeof document !== 'undefined' && 'dataset' in document.documentElement;\nconst DATAKEYPROP = isSupportsDataSet ? 'dataset' : '__DOMTASTIC_DATA__';\n\nconst camelize = str => str.replace(/-+(.)?/g, (match, char) => char ? char.toUpperCase() : '');\n\n/**\n * Get data from first element, or set data for each element in the collection.\n *\n * @param {String} key The key for the data to get or set.\n * @param {String} [value] The data to set.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').data('attrName'); // get\n *     $('.item').data('attrName', {any: 'data'}); // set\n */\n\nexport const data = function(key, value) {\n\n  if(typeof key === 'string' && typeof value === 'undefined') {\n    const element = this.nodeType ? this : this[0];\n    return element && DATAKEYPROP in element ? element[DATAKEYPROP][camelize(key)] : undefined;\n  }\n\n  return each(this, element => {\n    if(!isSupportsDataSet) {\n      element[DATAKEYPROP] = element[DATAKEYPROP] || {};\n    }\n\n    element[DATAKEYPROP][camelize(key)] = value;\n  });\n};\n\n/**\n * Get property from first element, or set property on each element in the collection.\n *\n * @param {String} key The name of the property to get or set.\n * @param {String} [value] The value of the property to set.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').prop('attrName'); // get\n *     $('.item').prop('attrName', 'attrValue'); // set\n */\n\nexport const prop = function(key, value) {\n\n  if(typeof key === 'string' && typeof value === 'undefined') {\n    const element = this.nodeType ? this : this[0];\n    return element && element ? element[key] : undefined;\n  }\n\n  return each(this, element => element[key] = value);\n};\n","/**\n * @module DOM (extra)\n */\n\nimport { each } from '../util';\nimport { append, before } from './index';\nimport { $ } from '../selector/index';\n\n/**\n * Append each element in the collection to the specified element(s).\n *\n * @param {Node|NodeList|Object} element What to append the element(s) to. Clones elements as necessary.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').appendTo(container);\n */\n\nexport const appendTo = function(element) {\n  const context = typeof element === 'string' ? $(element) : element;\n  append.call(context, this);\n  return this;\n};\n\n/*\n * Empty each element in the collection.\n *\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').empty();\n */\n\nexport const empty = function() {\n  return each(this, element => element.innerHTML = '');\n};\n\n/**\n * Remove the collection from the DOM.\n *\n * @return {Array} Array containing the removed elements\n * @example\n *     $('.item').remove();\n */\n\nexport const remove = function() {\n  return each(this, element => {\n    if(element.parentNode) {\n      element.parentNode.removeChild(element);\n    }\n  });\n};\n\n/**\n * Replace each element in the collection with the provided new content, and return the array of elements that were replaced.\n *\n * @return {Array} Array containing the replaced elements\n */\n\nexport const replaceWith = function() {\n  return before.apply(this, arguments).remove();\n};\n\n/**\n * Get the `textContent` from the first, or set the `textContent` of each element in the collection.\n *\n * @param {String} [value]\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').text('New content');\n */\n\nexport const text = function(value) {\n\n  if(value === undefined) {\n    return this[0].textContent;\n  }\n\n  return each(this, element => element.textContent = '' + value);\n};\n\n/**\n * Get the `value` from the first, or set the `value` of each element in the collection.\n *\n * @param {String} [value]\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('input.firstName').val('New value');\n */\n\nexport const val = function(value) {\n\n  if(value === undefined) {\n    return this.length > 0 ? this[0].value : undefined;\n  }\n\n  return each(this, element => element.value = value);\n};\n","/**\n * @module HTML\n */\n\nimport { each } from '../util';\n\n/*\n * Get the HTML contents of the first element, or set the HTML contents for each element in the collection.\n *\n * @param {String} [fragment] HTML fragment to set for the element. If this argument is omitted, the HTML contents are returned.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').html();\n *     $('.item').html('<span>more</span>');\n */\n\nexport const html = function(fragment) {\n\n  if(fragment === undefined) {\n    const element = this.nodeType ? this : this[0];\n    return element ? element.innerHTML : undefined;\n  }\n\n  return each(this, element => element.innerHTML = fragment);\n};\n","/**\n * @module closest\n */\n\nimport { $, matches } from './index';\nimport { each, uniq } from '../util';\n\n/**\n * Return the closest element matching the selector (starting by itself) for each element in the collection.\n *\n * @param {String} selector Filter\n * @param {Object} [context] If provided, matching elements must be a descendant of this element\n * @return {Object} New wrapped collection (containing zero or one element)\n * @chainable\n * @example\n *     $('.selector').closest('.container');\n */\n\nexport const closest = (() => {\n\n  const closest = function(selector, context) {\n    const nodes = [];\n    each(this, node => {\n      while(node && node !== context) {\n        if(matches(node, selector)) {\n          nodes.push(node);\n          break;\n        }\n        node = node.parentElement;\n      }\n    });\n    return $(uniq(nodes));\n  };\n\n  return typeof Element === 'undefined' || !Element.prototype.closest ? closest : function(selector, context) {\n    if(!context) {\n      const nodes = [];\n      each(this, node => {\n        const n = node.closest(selector);\n        if(n) {\n          nodes.push(n);\n        }\n      });\n      return $(uniq(nodes));\n    } else {\n      return closest.call(this, selector, context);\n    }\n  };\n})();\n","/**\n * @module Events\n */\n\nimport { each } from '../util';\nimport { closest } from '../selector/closest';\n\n/**\n * Shorthand for `addEventListener`. Supports event delegation if a filter (`selector`) is provided.\n *\n * @param {String} eventNames List of space-separated event types to be added to the element(s)\n * @param {String} [selector] Selector to filter descendants that delegate the event to this element.\n * @param {Function} handler Event handler\n * @param {Boolean} useCapture=false\n * @param {Boolean} once=false\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').on('click', callback);\n *     $('.container').on('click focus', '.item', handler);\n */\n\nexport const on = function(eventNames, selector, handler, useCapture, once) {\n\n  if(typeof selector === 'function') {\n    handler = selector;\n    selector = null;\n  }\n\n  let parts,\n    namespace,\n    eventListener;\n\n  eventNames.split(' ').forEach(eventName => {\n\n    parts = eventName.split('.');\n    eventName = parts[0] || null;\n    namespace = parts[1] || null;\n\n    eventListener = proxyHandler(handler);\n\n    each(this, element => {\n\n      if(selector) {\n        eventListener = delegateHandler.bind(element, selector, eventListener);\n      }\n\n      if(once) {\n        const listener = eventListener;\n        eventListener = event => {\n          off.call(element, eventNames, selector, handler, useCapture);\n          listener.call(element, event);\n        };\n      }\n\n      element.addEventListener(eventName, eventListener, useCapture || false);\n\n      getHandlers(element).push({\n        eventName,\n        handler,\n        eventListener,\n        selector,\n        namespace\n      });\n    });\n\n  }, this);\n\n  return this;\n};\n\n/**\n * Shorthand for `removeEventListener`.\n *\n * @param {String} eventNames List of space-separated event types to be removed from the element(s)\n * @param {String} [selector] Selector to filter descendants that undelegate the event to this element.\n * @param {Function} handler Event handler\n * @param {Boolean} useCapture=false\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').off('click', callback);\n *     $('#my-element').off('myEvent myOtherEvent');\n *     $('.item').off();\n */\n\nexport const off = function(eventNames = '', selector, handler, useCapture) {\n\n  if(typeof selector === 'function') {\n    handler = selector;\n    selector = null;\n  }\n\n  let parts,\n    namespace,\n    handlers;\n\n  eventNames.split(' ').forEach(eventName => {\n\n    parts = eventName.split('.');\n    eventName = parts[0] || null;\n    namespace = parts[1] || null;\n\n    return each(this, element => {\n\n      handlers = getHandlers(element);\n\n      each(handlers.filter(item => {\n        return (\n          (!eventName || item.eventName === eventName) &&\n          (!namespace || item.namespace === namespace) &&\n          (!handler || item.handler === handler) &&\n          (!selector || item.selector === selector)\n        );\n      }), item => {\n        element.removeEventListener(item.eventName, item.eventListener, useCapture || false);\n        handlers.splice(handlers.indexOf(item), 1);\n      });\n\n      if(!eventName && !namespace && !selector && !handler) {\n        clearHandlers(element);\n      } else if(handlers.length === 0) {\n        clearHandlers(element);\n      }\n\n    });\n\n  }, this);\n\n  return this;\n};\n\n/**\n * Add event listener and execute the handler at most once per element.\n *\n * @param eventNames\n * @param selector\n * @param handler\n * @param useCapture\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').one('click', callback);\n */\n\nexport const one = function(eventNames, selector, handler, useCapture) {\n  return on.call(this, eventNames, selector, handler, useCapture, 1);\n};\n\n/**\n * Get event handlers from an element\n *\n * @private\n * @param {Node} element\n * @return {Array}\n */\n\nconst eventKeyProp = '__domtastic_event__';\nlet id = 1;\nlet handlers = {};\nlet unusedKeys = [];\n\nexport const getHandlers = element => {\n  if(!element[eventKeyProp]) {\n    element[eventKeyProp] = unusedKeys.length === 0 ? ++id : unusedKeys.pop();\n  }\n  const key = element[eventKeyProp];\n  return handlers[key] || (handlers[key] = []);\n};\n\n/**\n * Clear event handlers for an element\n *\n * @private\n * @param {Node} element\n */\n\nexport const clearHandlers = element => {\n  const key = element[eventKeyProp];\n  if(handlers[key]) {\n    handlers[key] = null;\n    element[eventKeyProp] = null;\n    unusedKeys.push(key);\n  }\n};\n\n/**\n * Function to create a handler that augments the event object with some extra methods,\n * and executes the callback with the event and the event data (i.e. `event.detail`).\n *\n * @private\n * @param handler Callback to execute as `handler(event, data)`\n * @return {Function}\n */\n\nexport const proxyHandler = handler => function(event) {\n  return handler.call(this, augmentEvent(event));\n};\n\nconst eventMethods = {\n  preventDefault: 'isDefaultPrevented',\n  stopImmediatePropagation: 'isImmediatePropagationStopped',\n  stopPropagation: 'isPropagationStopped'\n};\nconst returnTrue = () => true;\nconst returnFalse = () => false;\n\n/**\n * Attempt to augment events and implement something closer to DOM Level 3 Events.\n *\n * @private\n * @param {Object} event\n * @return {Function}\n */\n\nconst augmentEvent = event => {\n  if(!event.isDefaultPrevented || event.stopImmediatePropagation || event.stopPropagation) {\n    for(const methodName in eventMethods) {\n      (function(methodName, testMethodName, originalMethod) {\n        event[methodName] = function() {\n          this[testMethodName] = returnTrue;\n          return originalMethod && originalMethod.apply(this, arguments);\n        };\n        event[testMethodName] = returnFalse;\n      }(methodName, eventMethods[methodName], event[methodName]));\n    }\n    if(event._preventDefault) {\n      event.preventDefault();\n    }\n  }\n  return event;\n};\n\n/**\n * Function to test whether delegated events match the provided `selector` (filter),\n * if the event propagation was stopped, and then actually call the provided event handler.\n * Use `this` instead of `event.currentTarget` on the event object.\n *\n * @private\n * @param {String} selector Selector to filter descendants that undelegate the event to this element.\n * @param {Function} handler Event handler\n * @param {Event} event\n */\n\nexport const delegateHandler = function(selector, handler, event) {\n  const eventTarget = event._target || event.target;\n  const currentTarget = closest.call([eventTarget], selector, this)[0];\n  if(currentTarget && currentTarget !== this) {\n    if(currentTarget === eventTarget || !(event.isPropagationStopped && event.isPropagationStopped())) {\n      handler.call(currentTarget, event);\n    }\n  }\n};\n\nexport const bind = on;\nexport const unbind = off;\n","/**\n * @module trigger\n */\n\nimport { win, each } from '../util';\nimport { contains } from '../dom/contains';\n\nconst reMouseEvent = /^(mouse(down|up|over|out|enter|leave|move)|contextmenu|(dbl)?click)$/;\nconst reKeyEvent = /^key(down|press|up)$/;\n\n/**\n * Trigger event at element(s)\n *\n * @param {String} type Type of the event\n * @param {Object} data Data to be sent with the event (`params.detail` will be set to this).\n * @param {Object} [params] Event parameters (optional)\n * @param {Boolean} params.bubbles=true Does the event bubble up through the DOM or not.\n * @param {Boolean} params.cancelable=true Is the event cancelable or not.\n * @param {Mixed} params.detail=undefined Additional information about the event.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $('.item').trigger('anyEventType');\n */\n\nexport const trigger = function(type, data, {bubbles = true, cancelable = true, preventDefault = false} = {}) {\n\n  const EventConstructor = getEventConstructor(type);\n  const event = new EventConstructor(type, {\n    bubbles,\n    cancelable,\n    preventDefault,\n    detail: data\n  });\n\n  event._preventDefault = preventDefault;\n\n  return each(this, element => {\n    if(!bubbles || isEventBubblingInDetachedTree || isAttachedToDocument(element)) {\n      dispatchEvent(element, event);\n    } else {\n      triggerForPath(element, type, {\n        bubbles,\n        cancelable,\n        preventDefault,\n        detail: data\n      });\n    }\n  });\n};\n\nconst getEventConstructor = type => isSupportsOtherEventConstructors ? (reMouseEvent.test(type) ? MouseEvent : (reKeyEvent.test(type) ? KeyboardEvent : CustomEvent)) : CustomEvent;\n\n/**\n * Trigger event at first element in the collection. Similar to `trigger()`, except:\n *\n * - Event does not bubble\n * - Default event behavior is prevented\n * - Only triggers handler for first matching element\n *\n * @param {String} type Type of the event\n * @param {Object} data Data to be sent with the event\n * @example\n *     $('form').triggerHandler('submit');\n */\n\nexport const triggerHandler = function(type, data) {\n  if(this[0]) {\n    trigger.call(this[0], type, data, {\n      bubbles: false,\n      preventDefault: true\n    });\n  }\n};\n\n/**\n * Check whether the element is attached to or detached from) the document\n *\n * @private\n * @param {Node} element Element to test\n * @return {Boolean}\n */\n\nconst isAttachedToDocument = element => {\n  if(element === window || element === document) {\n    return true;\n  }\n  return contains(element.ownerDocument.documentElement, element);\n};\n\n/**\n * Dispatch the event at the element and its ancestors.\n * Required to support delegated events in browsers that don't bubble events in detached DOM trees.\n *\n * @private\n * @param {Node} element First element to dispatch the event at\n * @param {String} type Type of the event\n * @param {Object} [params] Event parameters (optional)\n * @param {Boolean} params.bubbles=true Does the event bubble up through the DOM or not.\n * Will be set to false (but shouldn't matter since events don't bubble anyway).\n * @param {Boolean} params.cancelable=true Is the event cancelable or not.\n * @param {Mixed} params.detail=undefined Additional information about the event.\n */\n\nconst triggerForPath = (element, type, params = {}) => {\n  params.bubbles = false;\n  const event = new CustomEvent(type, params);\n  event._target = element;\n  do {\n    dispatchEvent(element, event);\n  } while(element = element.parentNode); // eslint-disable-line no-cond-assign\n};\n\n/**\n * Dispatch event to element, but call direct event methods instead if available\n * (e.g. \"blur()\", \"submit()\") and if the event is non-cancelable.\n *\n * @private\n * @param {Node} element Element to dispatch the event at\n * @param {Object} event Event to dispatch\n */\n\nconst directEventMethods = ['blur', 'focus', 'select', 'submit'];\n\nconst dispatchEvent = (element, event) => {\n  if(directEventMethods.indexOf(event.type) !== -1 && typeof element[event.type] === 'function' && !event._preventDefault && !event.cancelable) {\n    element[event.type]();\n  } else {\n    element.dispatchEvent(event);\n  }\n};\n\n/**\n * Polyfill for CustomEvent, borrowed from [MDN](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/CustomEvent#Polyfill).\n * Needed to support IE (9, 10, 11) & PhantomJS\n */\n\n(() => {\n  const CustomEvent = function(event, params = {\n    bubbles: false,\n    cancelable: false,\n    detail: undefined\n  }) {\n    let customEvent = document.createEvent('CustomEvent');\n    customEvent.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n    return customEvent;\n  };\n\n  CustomEvent.prototype = win.CustomEvent && win.CustomEvent.prototype;\n  win.CustomEvent = CustomEvent;\n\n})();\n\n/*\n * Are events bubbling in detached DOM trees?\n * @private\n */\n\nconst isEventBubblingInDetachedTree = (() =>{\n  let isBubbling = false;\n  const doc = win.document;\n  if(doc) {\n    const parent = doc.createElement('div');\n    const child = parent.cloneNode();\n    parent.appendChild(child);\n    parent.addEventListener('e', function() {\n      isBubbling = true;\n    });\n    child.dispatchEvent(new CustomEvent('e', {bubbles: true}));\n  }\n  return isBubbling;\n})();\n\nconst isSupportsOtherEventConstructors = (() => {\n  try {\n    new MouseEvent('click');\n  } catch(e) {\n    return false;\n  }\n  return true;\n})();\n","/**\n * @module Ready\n */\n\n/**\n * Execute callback when `DOMContentLoaded` fires for `document`, or immediately if called afterwards.\n *\n * @param handler Callback to execute when initial DOM content is loaded.\n * @return {Object} The wrapped collection\n * @chainable\n * @example\n *     $(document).ready(callback);\n */\n\nexport const ready = function(handler) {\n  if(/complete|loaded|interactive/.test(document.readyState) && document.body) {\n    handler();\n  } else {\n    document.addEventListener('DOMContentLoaded', handler, false);\n  }\n  return this;\n};\n","/**\n * @module noConflict\n */\n\nimport { win } from './util';\n\n/*\n * Save the previous value of the global `$` variable, so that it can be restored later on.\n * @private\n */\n\nconst previousLib = win.$;\n\n/**\n * In case another library sets the global `$` variable before DOMtastic does,\n * this method can be used to return the global `$` to that other library.\n *\n * @return {Object} Reference to DOMtastic.\n * @example\n *     var domtastic = $.noConflict();\n */\n\nexport const noConflict = function() {\n  win.$ = previousLib;\n  return this;\n};\n","/**\n * @module Selector (extra)\n */\n\nimport { each, toArray } from '../util';\nimport { $, matches } from './index';\n\n/**\n * Return children of each element in the collection, optionally filtered by a selector.\n *\n * @param {String} [selector] Filter\n * @return {Object} New wrapped collection\n * @chainable\n * @example\n *     $('.selector').children();\n *     $('.selector').children('.filter');\n */\n\nexport const children = function(selector) {\n  const nodes = [];\n  each(this, element => {\n    if(element.children) {\n      each(element.children, child => {\n        if(!selector || (selector && matches(child, selector))) {\n          nodes.push(child);\n        }\n      });\n    }\n  });\n  return $(nodes);\n};\n\n/**\n * Add the elements of a wrapped collection to another.\n *\n * @param {String|Node|NodeList|Array} selector Query selector, `Node`, `NodeList`, array of elements, or HTML fragment string.\n * @return {Object} The extended wrapped collection\n * @example\n *     $('.items').concat($('.more-items));\n *     $('.items').concat('.more-items);\n *     $('.items').concat('<div>more</div>');\n */\n\nexport const concat = function(selector) {\n  each($(selector), element => {\n    if([].indexOf.call(this, element) === -1) {\n      [].push.call(this, element);\n    }\n  });\n  return this;\n};\n\n/**\n * Return child nodes of each element in the collection, including text and comment nodes.\n *\n * @return {Object} New wrapped collection\n * @example\n *     $('.selector').contents();\n */\n\nexport const contents = function() {\n  const nodes = [];\n  each(this, element => nodes.push.apply(nodes, toArray(element.childNodes)));\n  return $(nodes);\n};\n\n/**\n * Return a collection containing only the one at the specified index.\n *\n * @param {Number} index\n * @return {Object} New wrapped collection\n * @chainable\n * @example\n *     $('.items').eq(1)\n *     // The second item; result is the same as doing $($('.items')[1]);\n */\n\nexport const eq = function(index) {\n  return slice.call(this, index, index + 1);\n};\n\n/**\n * Return a collection containing only the first item.\n *\n * @return {Object} New wrapped collection\n * @chainable\n * @example\n *     $('.items').first()\n *     // The first item; result is the same as doing $($('.items')[0]);\n */\n\nexport const first = function() {\n  return slice.call(this, 0, 1);\n};\n\n/**\n * Return the DOM element at the specified index.\n *\n * @param {Number} index\n * @return {Node} Element at the specified index\n * @example\n *     $('.items').get(1)\n *     // The second element; result is the same as doing $('.items')[1];\n */\n\nexport const get = function(index) {\n  return this[index];\n};\n\n/**\n * Return the parent elements of each element in the collection, optionally filtered by a selector.\n *\n * @param {String} [selector] Filter\n * @return {Object} New wrapped collection\n * @chainable\n * @example\n *     $('.selector').parent();\n *     $('.selector').parent('.filter');\n */\n\nexport const parent = function(selector) {\n  const nodes = [];\n  each(this, element => {\n    if(!selector || (selector && matches(element.parentNode, selector))) {\n      nodes.push(element.parentNode);\n    }\n  });\n  return $(nodes);\n};\n\n/**\n * Return the sibling elements of each element in the collection, optionally filtered by a selector.\n *\n * @param {String} [selector] Filter\n * @return {Object} New wrapped collection\n * @chainable\n * @example\n *     $('.selector').siblings();\n *     $('.selector').siblings('.filter');\n */\n\nexport const siblings = function(selector) {\n  const nodes = [];\n  each(this, element => each(element.parentNode.children, sibling => {\n    if(sibling !== element && (!selector || (selector && matches(sibling, selector)))) {\n      nodes.push(sibling);\n    }\n  }));\n  return $(nodes);\n};\n\n/**\n * Create a new, sliced collection.\n *\n * @param {Number} start\n * @param {Number} end\n * @return {Object} New wrapped collection\n * @example\n *     $('.items').slice(1, 3)\n *     // New wrapped collection containing the second, third, and fourth element.\n */\n\nexport const slice = function(start, end) { // eslint-disable-line no-unused-vars\n  return $([].slice.apply(this, arguments));\n};\n","/**\n * @module Type\n */\n\n/*\n * Determine if the argument passed is a Javascript function object.\n *\n * @param {Object} [obj] Object to test whether or not it is a function.\n * @return {boolean}\n * @example\n *     $.isFunction(function(){}); // true\n * @example\n *     $.isFunction({}); // false\n */\n\nexport const isFunction = obj => typeof obj === 'function';\n\n/*\n * Determine whether the argument is an array.\n *\n * @param {Object} [obj] Object to test whether or not it is an array.\n * @return {boolean}\n * @example\n *     $.isArray([]); // true\n * @example\n *     $.isArray({}); // false\n */\n\nexport const isArray = Array.isArray;\n","/**\n * @module API\n */\n\nimport { extend } from './util';\n\nconst api = {};\nlet $ = {};\n\n// Import modules to build up the API\n\nimport * as array from './array';\nimport BaseClass from './baseClass';\nimport * as css from './css';\nimport * as dom from './dom/index';\nimport * as dom_attr from './dom/attr';\nimport * as dom_class from './dom/class';\nimport * as dom_contains from './dom/contains';\nimport * as dom_data from './dom/data';\nimport * as dom_extra from './dom/extra';\nimport * as dom_html from './dom/html';\nimport * as event from './event/index';\nimport * as event_trigger from './event/trigger';\nimport * as event_ready from './event/ready';\nimport * as noconflict from './noconflict';\nimport * as selector from './selector/index';\nimport * as selector_closest from './selector/closest';\nimport * as selector_extra from './selector/extra';\nimport * as type from './type';\n\nif(typeof selector !== 'undefined') {\n  $ = selector.$;\n  $.matches = selector.matches;\n  api.find = selector.find;\n}\n\nextend($, dom_contains, noconflict, type);\nextend(api, array, css, dom_attr, dom, dom_class, dom_data, dom_extra, dom_html, event, event_trigger, event_ready, selector_closest, selector_extra);\n\n$.fn = api;\n\n// Version\n\n$.version = '__VERSION__';\n\n// Util\n\n$.extend = extend;\n\n// Provide base class to extend from\n\nif(typeof BaseClass !== 'undefined') {\n  $.BaseClass = BaseClass($.fn);\n}\n\n// Export interface\n\nexport default $;\n"],"sourceRoot":""}